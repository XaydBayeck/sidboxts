{"version":3,"sources":["components/topbar/Topbar.tsx","components/titlebar/Titlebar.tsx","components/titlebar/HomeTitle.tsx","components/card/Card.tsx","components/card/CardsDrawers.tsx","components/home/Home.tsx","components/articleTitle/ArticleTitle.tsx","components/blogView/BlogView.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Topbar","className","type","Titlebar","children","to","HomeTitle","blogName","links","id","map","i","linkName","linkPath","href","toString","showDate","date","year","month","day","Card","imgHtml","title","content","tags","tkey","tagsHTML","tag","undefined","provideImg","src","alt","provideText","CardsDrawers","cardsHTML","cards","nblogs","blog","str","Home","ArticleTitle","BlogView","state","text","this","getMarkdown","axios","get","props","name","responseType","then","res","setState","data","source","remarkPlugins","remarkGfm","singleTilde","components","code","inline","match","exec","String","replace","style","materialDark","language","PreTag","React","Component","App","exact","path","ToArticleTitle","ToBlogView","useParams","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a22b89f8.chunk.js","sourcesContent":["import * as React from \"react\";\r\n// import menu from './menu.svg';\r\n// import search from './search.svg';\r\nimport \"./Topbar.css\";\r\n\r\nexport default function Topbar() {\r\n  return (\r\n    <div className=\"topbar\">\r\n      <div className=\"profile\">\r\n        Menu\r\n      </div>\r\n      <div className=\"searchbar\">\r\n        <input type=\"text\" className=\"search-input\" />\r\n        <button className=\"to-search\">\r\n          Search\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import * as React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Titlebar.css'\n\nexport interface Props {\n    children?: React.ReactNode | React.ReactNode[],\n}\n\nexport default function Titlebar({ children }: Props) {\n    return (\n        <div className=\"title-bar\">\n            {children}\n            <div className=\"nav-bar\">\n                <nav>\n                    <NavLink to=\"/sidboxts/Home\">Home</NavLink>\n                    <NavLink to=\"/sidboxts/Category\">Category</NavLink>\n                    <NavLink to=\"/sidboxts/TimeLine\">Time Line</NavLink>\n                    <NavLink to=\"/sidboxts/About\">About</NavLink>\n                </nav>\n            </div>\n        </div>\n    );\n}\n","import './HomeTitle.css'\n\nexport interface Props {\n    blogName: string,\n    links: {\n        linkName: string,\n        linkPath: string,\n    }[],\n}\n\nexport default function HomeTitle({ blogName, links }: Props) {\n    return (\n        <div className=\"home-title\">\n            <div className=\"blog-name\">\n                {blogName}\n            </div>\n            <div className=\"links\">\n                <ul id=\"links\">\n                    {links.map(({ linkName, linkPath }, i) => {\n                        return <li key={i.toString()}><a href={linkPath}>{linkName}</a></li>\n                    })}\n                </ul>\n            </div>\n        </div>\n    );\n}\n","import \"./Card.css\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport interface Content {\r\n  provideText: () => string;\r\n  provideImg?: () => {\r\n    src: string,\r\n    alt: string,\r\n  };\r\n}\r\n\r\nexport interface Props<T extends Content> {\r\n  title: string;\r\n  content: T;\r\n  date: Date;\r\n  tags: string[];\r\n  tkey: any;\r\n}\r\n\r\ninterface Date {\r\n  year: number;\r\n  month: number;\r\n  day: number;\r\n}\r\n\r\nfunction showDate(date: Date) {\r\n  return \"Posted on \" + date.year + \"-\" + date.month + \"-\" + date.day;\r\n}\r\n\r\nexport default function Card<T extends Content>({\r\n  title,\r\n  content,\r\n  date,\r\n  tags,\r\n  tkey,\r\n}: Props<T>) {\r\n  let tagsHTML = tags.map((tag: string, i: number) => {\r\n    return (\r\n      <div className=\"tag\" key={i}>\r\n        <span className=\"tag-icon\"></span>\r\n        <Link to={'/sidboxts/Category/' + tag} className=\"tag-text\">{tag}</Link>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  let imgHtml;\r\n\r\n  if (content.provideImg === undefined) { imgHtml = <div /> }\r\n  else {\r\n    let { src, alt } = content.provideImg();\r\n    imgHtml = (\r\n      <div className=\"content\">\r\n        <img src={src} alt={alt} />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"card\" key={tkey}>\r\n      <Link to={'/sidboxts/blog/' + title}>\r\n        <div className=\"title\">{title}</div>\r\n        {imgHtml}\r\n        <div className=\"content\">{content.provideText()}</div>\r\n        <div className=\"properties\">\r\n          <div className=\"date\">{showDate(date)}</div>\r\n          <div className=\"tags\">{tagsHTML}</div>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport \"./CardsDrawers.css\";\r\nimport * as Cardt from \"./Card\";\r\nimport Card from \"./Card\";\r\n\r\nexport interface Props<T extends Cardt.Content> {\r\n  cards: Cardt.Props<T>[];\r\n}\r\n\r\nexport default function CardsDrawers<T extends Cardt.Content>({\r\n  cards,\r\n}: Props<T>) {\r\n  let cardsHTML = cards.map(\r\n    ({ title, content, date, tags }: Cardt.Props<T>, i: number) => {\r\n      return (\r\n        <Card title={title} content={content} date={date} tags={tags} tkey={i} key={i} />\r\n      );\r\n    }\r\n  );\r\n\r\n  return <div className=\"cards-drawers\">{cardsHTML}</div>;\r\n}\r\n","import './Home.css';\n\nimport CardsDrawers from \"../card/CardsDrawers\";\nimport blogs from \"../../resources/blogs.json\";\n\nlet nblogs = blogs.map((blog) => {\n    return {\n        ...blog,\n        content: {\n            ...blog.content,\n            provideText: () => {\n                return blog.content.str;\n            },\n        },\n        tkey: {},\n    };\n});\n\nexport default function Home() {\n    return (\n        <div className=\"home\">\n            <CardsDrawers cards={nblogs} />\n        </div>\n    )\n}\n","import { Link } from 'react-router-dom'\nimport './ArticleTitle.css'\n\nexport interface TitleProps {\n    title: string,\n    date: {\n        year: number,\n        month: number,\n        day: number,\n    },\n    tags: string[],\n}\n\nexport default function ArticleTitle({ title, date, tags }: TitleProps) {\n    return (\n        <div className=\"article-title\">\n            <div className=\"title title-text\">{title}</div>\n            <div className=\"title-properties properties\">\n                <div className=\"date\">\n                    {date.year + '-' + date.month + '-' + date.day}\n                </div>\n                <div className=\"tags\">\n                    {tags.map((tag, i) => {\n                        return (\n                            <div className=\"tag\" key={i}>\n                                <Link to={'/Category/' + tag} className=\"tag-text\">{tag}</Link>\n                            </div>\n                        )\n                    })}\n                </div>\n            </div>\n        </div>\n    )\n}\n","import axios from 'axios';\nimport React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport MarkNav from 'markdown-navbar'\nimport remarkGfm from 'remark-gfm'\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter'\nimport { materialDark } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport './BlogView.css';\nimport './markdown4.css'\n\nexport default class BlogView extends React.Component<{ name: string }, { text: string }> {\n    state = { text: \"There is no Article\" }\n\n    componentDidMount() {\n        this.getMarkdown();\n    }\n\n    getMarkdown() {\n        axios.get<string>('/sidboxts/markdown/' + this.props.name + \".md\", { responseType: 'text' })\n            .then((res) => {\n                this.setState({ text: res.data })\n            }, () => {\n                this.setState({ text: \"There is no Article\" })\n            })\n    };\n\n    render() {\n        return (\n            <div className='blog-view'>\n                <div className=\"nav-container\">\n                    <MarkNav source={this.state.text}></MarkNav>\n                </div>\n                <div className=\"article-container\">\n                    <ReactMarkdown\n                        className=\"markdown\"\n                        remarkPlugins={[[remarkGfm, { singleTilde: true }]]}\n                        children={this.state.text}\n                        components={{\n                            code({ inline, className, children }) {\n                                const match = /language-(\\w+)/.exec(className || '')\n                                return !inline && match ? (\n                                    <SyntaxHighlighter\n                                        children={String(children).replace(/\\n$/, '')}\n                                        style={materialDark}\n                                        language={match[1]}\n                                        PreTag=\"div\"\n                                    />\n                                ) : (\n                                    <code className={className} >\n                                        {children}\n                                    </code>\n                                )\n                            }\n                        }}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n","// import logo from './logo.svg';\nimport \"./App.css\";\nimport Topbar from \"./components/topbar/Topbar\";\nimport Titlebar from './components/titlebar/Titlebar';\nimport HomeTitle from './components/titlebar/HomeTitle'\nimport Home from './components/home/Home'\nimport { Route, Switch, useParams } from \"react-router-dom\";\nimport ArticleTitle, { TitleProps } from \"./components/articleTitle/ArticleTitle\";\nimport BlogView from \"./components/blogView/BlogView\";\n\nlet links = [\n  {\n    linkName: \"bilibili\",\n    linkPath: \"https://www.bilibili.com\",\n  },\n  {\n    linkName: \"github\",\n    linkPath: \"https://www.github.com\",\n  }\n]\n\n// <img src={logo} className=\"App-logo\" alt=\"logo\" />\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Topbar></Topbar>\n        <Titlebar>\n          <Switch>\n            <Route exact path='/sidboxts'>\n              <HomeTitle blogName=\"Sid's Blog\" links={links}></HomeTitle>\n            </Route>\n            <Route path='/sidboxts/Home'>\n              <HomeTitle blogName=\"Sid's Blog\" links={links}></HomeTitle>\n            </Route>\n            <Route path='/sidboxts/blog/:title'>\n              <ToArticleTitle />\n            </Route>\n          </Switch>\n        </Titlebar>\n        <Switch>\n          <Route exact path='/sidboxts'>\n            <Home />\n          </Route>\n          <Route path='/sidboxts/Home'>\n            <Home />\n          </Route>\n          <Route path='/sidboxts/blog/:title'>\n            <ToBlogView />\n          </Route>\n        </Switch>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n\nfunction ToArticleTitle() {\n\n  return (\n    <ArticleTitle title={useParams<{ title: string }>().title} date={{\n      year: 2021,\n      month: 10,\n      day: 10\n    }} tags={[\"test\", \"blog\", \"test\"]}></ArticleTitle>\n  );\n}\n\n\nfunction ToBlogView() {\n  let name = useParams<{ title: string }>().title;\n  return <BlogView name={name} />\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")!\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}