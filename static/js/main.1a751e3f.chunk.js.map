{"version":3,"sources":["components/topbar/menu.svg","components/topbar/search.svg","components/topbar/Topbar.tsx","components/card/Card.tsx","components/card/CardsDrawers.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Topbar","props","className","src","menu","alt","blogName","type","search","showDate","date","year","month","day","Card","title","content","tags","key","tagsHTML","map","tag","i","converToText","CardsDrawers","cardsHTML","cards","nblogs","blog","str","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+jDAAe,G,MAAA,IAA0B,kCCA1B,MAA0B,mC,eCS1B,SAASA,EAAOC,GAC7B,OACE,sBAAKC,UAAU,SAAf,UACE,qBAAKA,UAAU,UAAf,SACE,qBAAKC,IAAKC,EAAMF,UAAU,iBAAiBG,IAAI,WAEjD,qBAAKH,UAAU,YAAf,SAA4BD,EAAMK,WAClC,sBAAKJ,UAAU,YAAf,UACE,uBAAOK,KAAK,OAAOL,UAAU,iBAC7B,wBAAQA,UAAU,YAAlB,SACE,qBAAKC,IAAKK,EAAQH,IAAI,SAASH,UAAU,0B,YCEnD,SAASO,EAASC,GAChB,MAAO,aAAeA,EAAKC,KAAO,IAAMD,EAAKE,MAAQ,IAAMF,EAAKG,IAGnD,SAASC,EAAT,GAMD,IALZC,EAKW,EALXA,MACAC,EAIW,EAJXA,QACAN,EAGW,EAHXA,KACAO,EAEW,EAFXA,KACAC,EACW,EADXA,IAEIC,EAAWF,EAAKG,KAAI,SAACC,EAAaC,GACpC,OACE,sBAAKpB,UAAU,MAAf,UACE,sBAAMA,UAAU,aAChB,sBAAMA,UAAU,WAAhB,SAA4BmB,MAFJC,MAO9B,OACE,sBAAKpB,UAAU,OAAf,UACE,qBAAKA,UAAU,QAAf,SAAwBa,IACxB,qBAAKb,UAAU,UAAf,SAA0Bc,EAAQO,iBAClC,sBAAKrB,UAAU,aAAf,UACE,qBAAKA,UAAU,OAAf,SAAuBO,EAASC,KAChC,qBAAKR,UAAU,OAAf,SAAuBiB,SALAD,GCjChB,SAASM,EAAT,GAED,IACRC,EADO,EADXC,MAEsBN,KACpB,WAAiDE,GAAe,IAA7DP,EAA4D,EAA5DA,MAAOC,EAAqD,EAArDA,QAASN,EAA4C,EAA5CA,KAAMO,EAAsC,EAAtCA,KACvB,OACE,cAAC,EAAD,CAAMF,MAAOA,EAAOC,QAASA,EAASN,KAAMA,EAAMO,KAAMA,GAAWK,MAKzE,OAAO,qBAAKpB,UAAU,gBAAf,SAAgCuB,I,ICbrCE,E,KAAeP,KAAI,SAACQ,GAWtB,OAVW,2BACNA,GADM,IAETZ,QAAQ,2BACHY,EAAKZ,SADH,IAELO,aAAc,WACZ,OAAOK,EAAKZ,QAAQa,OAGxBX,IAAK,QAiBMY,MAXf,WACE,OACE,qBAAK5B,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,cAAC,EAAD,CAAQI,SAAS,eACjB,cAAC,EAAD,CAAcoB,MAAOC,UCbdI,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1a751e3f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/menu.7dbdab92.svg\";","export default __webpack_public_path__ + \"static/media/search.db621cda.svg\";","import * as React from \"react\";\r\nimport menu from './menu.svg';\r\nimport search from './search.svg';\r\nimport \"./Topbar.css\";\r\n\r\nexport interface Props {\r\n  blogName:string\r\n}\r\n\r\nexport default function Topbar(props: Props) {\r\n  return (\r\n    <div className=\"topbar\">\r\n      <div className=\"profile\">\r\n        <img src={menu} className=\"topbar-profile\" alt=\"menu\" />\r\n      </div>\r\n      <div className=\"blog-name\">{props.blogName}</div>\r\n      <div className=\"searchbar\">\r\n        <input type=\"text\" className=\"search-input\" />\r\n        <button className=\"to-search\">\r\n          <img src={search} alt=\"search\" className=\"search-button\" />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import * as React from \"react\";\r\nimport \"./Card.css\";\r\n\r\nexport interface Content {\r\n  converToText: () => string;\r\n}\r\n\r\nexport interface Props<T extends Content> {\r\n  title: string;\r\n  content: T;\r\n  date: Date;\r\n  tags: string[];\r\n  key: any;\r\n}\r\n\r\ninterface Date {\r\n  year: number;\r\n  month: number;\r\n  day: number;\r\n}\r\n\r\nfunction showDate(date: Date) {\r\n  return \"Posted on \" + date.year + \"-\" + date.month + \"-\" + date.day;\r\n}\r\n\r\nexport default function Card<T extends Content>({\r\n  title,\r\n  content,\r\n  date,\r\n  tags,\r\n  key,\r\n}: Props<T>) {\r\n  let tagsHTML = tags.map((tag: string, i: number) => {\r\n    return (\r\n      <div className=\"tag\" key={i}>\r\n        <span className=\"tag-icon\"></span>\r\n        <span className=\"tag-text\">{tag}</span>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"card\" key={key}>\r\n      <div className=\"title\">{title}</div>\r\n      <div className=\"content\">{content.converToText()}</div>\r\n      <div className=\"properties\">\r\n        <div className=\"date\">{showDate(date)}</div>\r\n        <div className=\"tags\">{tagsHTML}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport \"./CardsDrawers.css\";\r\nimport * as Cardt from \"./Card\";\r\nimport Card from \"./Card\";\r\n\r\nexport interface Props<T extends Cardt.Content> {\r\n  cards: Cardt.Props<T>[];\r\n}\r\n\r\nexport default function CardsDrawers<T extends Cardt.Content>({\r\n  cards,\r\n}: Props<T>) {\r\n  let cardsHTML = cards.map(\r\n    ({ title, content, date, tags }: Cardt.Props<T>, i: number) => {\r\n      return (\r\n        <Card title={title} content={content} date={date} tags={tags} key={i} />\r\n      );\r\n    }\r\n  );\r\n\r\n  return <div className=\"cards-drawers\">{cardsHTML}</div>;\r\n}\r\n","import React from \"react\";\n// import logo from './logo.svg';\nimport \"./App.css\";\nimport Topbar from \"./components/topbar/Topbar\";\nimport CardsDrawers from \"./components/card/CardsDrawers\";\nimport blogs from \"./resources/blogs.json\";\n\nlet nblogs = blogs.map((blog) => {\n  let newBlog = {\n    ...blog,\n    content: {\n      ...blog.content,\n      converToText: () => {\n        return blog.content.str;\n      },\n    },\n    key: {},\n  };\n  return newBlog;\n});\n\n// <img src={logo} className=\"App-logo\" alt=\"logo\" />\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Topbar blogName=\"Sid's blog\"></Topbar>\n        <CardsDrawers cards={nblogs} />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")!\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}